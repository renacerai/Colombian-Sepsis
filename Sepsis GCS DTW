# Para glasgow
data_fold = '/content/Glasgow Trayectorias.xlsx - Tabla de variables.csv'
result_fold = '/content/results'


# Crea el directorio
os.makedirs(result_fold, exist_ok=True)

data_type = 'GCS_track'
data = pd.read_csv(data_fold)

#  Aquí está el cambio:  Establecer la primera columna como índice
data = data.set_index(data.columns[0])
print(data.head())

# Extraer columnas F1 a G6 como series de tiempo
time_series_data = data[['G1', 'G2', 'G3', 'G4', 'G5', 'G6']]

# Convertir a NumPy array para tslearn
time_series_array = time_series_data.to_numpy()

id_paciente = list(data.index)
score_normalized = data.sub(data.min(axis=1), axis=0).div(data.max(axis=1) - data.min(axis=1), axis=0).fillna(0)
score_normalized = np.array(score_normalized)

print('running dtw....')
start = time()
dis = cdist_dtw(score_normalized,n_jobs=4)

c_time = time() - start
print(c_time)

score_id=[id_paciente,dis]

with open(os.path.join(result_fold,data_type+'.pkl'),'wb') as f:
    pickle.dump(score_id,f)

# obtaining clustermap figure
linkage = hc.linkage(sp.distance.squareform(dis,checks=False), method='complete')
ns_plot.savefig(result_fold+'/'+'clustermap_'+ data_type +".png", dpi = 600)
files.download(result_fold + '/' + 'clustermap_' + data_type + ".png")
